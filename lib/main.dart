import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'user_data.dart';
import 'screens/home_page.dart';
import 'authentication/login_page.dart';
import 'authentication/signup_page.dart';
import 'flights/flight_search.dart';
import 'firebase_options.dart'; // generated by Firebase CLI
import 'dart:math';
import 'dart:ui';

// ----------------- Main -----------------
Future<void> main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Firebase.initializeApp(options: DefaultFirebaseOptions.currentPlatform);

  runApp(const SkymilesApp());
}

class SkymilesApp extends StatelessWidget {
  const SkymilesApp({super.key});

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      debugShowCheckedModeBanner: false,
      title: 'Skymiles',
      theme: ThemeData.dark().copyWith(
        primaryColor: const Color(0xFFC68B39),
        scaffoldBackgroundColor: const Color(0xFF1E1E1E),
      ),
      home: const LogoAnimationScreen(),
      routes: {
        '/onboarding': (_) => const OnboardingPage(),
        '/login': (_) => const StyledLoginPage(),
        '/signup': (_) => const StyledSignupPage(),
      },
    );
  }
}

// ----------------- Logo Animation Screen -----------------
class LogoAnimationScreen extends StatefulWidget {
  const LogoAnimationScreen({Key? key}) : super(key: key);

  @override
  _LogoAnimationScreenState createState() => _LogoAnimationScreenState();
}

class _LogoAnimationScreenState extends State<LogoAnimationScreen>
    with TickerProviderStateMixin {
  late final AnimationController _orbitController;
  late final AnimationController _flyAwayController;
  late final Animation<double> _flyAwayAnimation;

  @override
  void initState() {
    super.initState();

    _orbitController = AnimationController(
      vsync: this,
      duration: const Duration(seconds: 3),
    )..forward();

    _flyAwayController = AnimationController(
      vsync: this,
      duration: const Duration(milliseconds: 800),
    );

    _flyAwayAnimation = Tween<double>(begin: 0, end: 300).animate(
      CurvedAnimation(parent: _flyAwayController, curve: Curves.easeIn),
    );

    Future.delayed(const Duration(seconds: 3), () {
      _flyAwayController.forward();
    });

    Future.delayed(const Duration(seconds: 4), () {
      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (_) => const WelcomeScreensPage()),
      );
    });
  }

  @override
  void dispose() {
    _orbitController.dispose();
    _flyAwayController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF0A0A0F),
      body: Center(
        child: Column(
          mainAxisSize: MainAxisSize.min,
          children: [
            AnimatedBuilder(
              animation: Listenable.merge([
                _orbitController,
                _flyAwayController,
              ]),
              builder: (context, child) {
                return CustomPaint(
                  size: const Size(300, 300),
                  painter: GlobeJetPainter(
                    orbitAngle: (_orbitController.value * 2 * pi) % (2 * pi),
                    flyAwayOffset: _flyAwayAnimation.value,
                  ),
                );
              },
            ),
            const SizedBox(height: 24),
            Text(
              'Loading...',
              style: TextStyle(
                color: Colors.amber.shade300,
                fontSize: 20,
                fontWeight: FontWeight.bold,
                letterSpacing: 1.2,
                shadows: [
                  Shadow(
                    color: Colors.amber.withOpacity(0.6),
                    blurRadius: 12,
                    offset: const Offset(0, 0),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
    );
  }
}

// ----------------- Globe Painter -----------------
class GlobeJetPainter extends CustomPainter {
  final double orbitAngle;
  final double flyAwayOffset;

  GlobeJetPainter({required this.orbitAngle, required this.flyAwayOffset});

  @override
  void paint(Canvas canvas, Size size) {
    final center = size.center(Offset.zero);
    final radius = size.width / 3;

    final Paint globeFillPaint =
        Paint()
          ..shader = RadialGradient(
            colors: const [Color(0xFF2E2E2E), Color(0xFF1E1E1E)],
            center: Alignment.center,
            radius: 0.8,
          ).createShader(Rect.fromCircle(center: center, radius: radius));

    final Paint globeOutlinePaint =
        Paint()
          ..color = const Color(0xFF444444)
          ..style = PaintingStyle.stroke
          ..strokeWidth = 2;

    canvas.drawCircle(center, radius, globeFillPaint);
    canvas.drawCircle(center, radius, globeOutlinePaint);

    final Paint jetPaint = Paint()..color = const Color(0xFFC68B39);

    final jetX = center.dx + radius * cos(orbitAngle) + flyAwayOffset;
    final jetY = center.dy + radius * sin(orbitAngle) - flyAwayOffset * 0.3;

    const double jetSize = 10;
    final Path jetPath =
        Path()
          ..moveTo(jetX, jetY)
          ..lineTo(jetX - jetSize, jetY - jetSize / 2)
          ..lineTo(jetX - jetSize, jetY + jetSize / 2)
          ..close();

    canvas.drawPath(jetPath, jetPaint);
  }

  @override
  bool shouldRepaint(CustomPainter oldDelegate) => true;
}

// ----------------- Welcome Screens -----------------
class WelcomeScreensPage extends StatefulWidget {
  const WelcomeScreensPage({Key? key}) : super(key: key);

  @override
  State<WelcomeScreensPage> createState() => _WelcomeScreensPageState();
}

class _WelcomeScreensPageState extends State<WelcomeScreensPage> {
  final PageController _controller = PageController();
  int _currentIndex = 0;

  final List<Map<String, String>> pages = [
    {
      "title": "Easiest Way To Your Next Destination",
      "desc":
          "Discover hidden gems, smart booking strategies, and useful flight details.",
      "image":
          "https://images.unsplash.com/photo-1507525428034-b723cf961d3e?auto=format&fit=crop&w=800&q=80",
    },
    {
      "title": "Smart Booking Experience",
      "desc":
          "Easily book flights and manage your travel preferences with a smooth interface.",
      "image":
          "https://images.unsplash.com/photo-1526772662000-3f88f10405ff?auto=format&fit=crop&w=800&q=80",
    },
    {
      "title": "Explore Places Freely",
      "desc":
          "Explore exciting destinations and get inspired for your next journey with just a few taps.",
      "image":
          "https://images.unsplash.com/photo-1483683804023-6ccdb62f86ef?auto=format&fit=crop&w=800&q=80",
    },
  ];

  void _nextPage() {
    if (_currentIndex < pages.length - 1) {
      _controller.nextPage(
        duration: const Duration(milliseconds: 500),
        curve: Curves.easeInOut,
      );
    } else {
      Navigator.pushReplacementNamed(context, '/onboarding');
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: Container(
        decoration: const BoxDecoration(
          gradient: LinearGradient(
            colors: [Color(0xFF1A1A1D), Color(0xFF2A2E35)],
            begin: Alignment.topLeft,
            end: Alignment.bottomRight,
          ),
        ),
        child: SafeArea(
          child: Column(
            children: [
              Expanded(
                child: PageView.builder(
                  controller: _controller,
                  onPageChanged:
                      (index) => setState(() => _currentIndex = index),
                  itemCount: pages.length,
                  itemBuilder: (_, index) {
                    final page = pages[index];
                    return Padding(
                      padding: const EdgeInsets.symmetric(
                        horizontal: 20,
                        vertical: 40,
                      ),
                      child: Column(
                        mainAxisAlignment: MainAxisAlignment.center,
                        children: [
                          Container(
                            height: 300,
                            decoration: BoxDecoration(
                              borderRadius: BorderRadius.circular(25),
                              boxShadow: const [
                                BoxShadow(
                                  color: Colors.black45,
                                  blurRadius: 20,
                                  offset: Offset(0, 10),
                                ),
                              ],
                              image: DecorationImage(
                                image: NetworkImage(page["image"]!),
                                fit: BoxFit.cover,
                              ),
                            ),
                          ),
                          const SizedBox(height: 40),
                          ClipRRect(
                            borderRadius: BorderRadius.circular(20),
                            child: BackdropFilter(
                              filter: ImageFilter.blur(sigmaX: 15, sigmaY: 15),
                              child: Container(
                                padding: const EdgeInsets.all(24),
                                decoration: BoxDecoration(
                                  color: Colors.white.withOpacity(0.1),
                                  borderRadius: BorderRadius.circular(20),
                                  border: Border.all(color: Colors.white24),
                                ),
                                child: Column(
                                  children: [
                                    Text(
                                      page["title"]!,
                                      textAlign: TextAlign.center,
                                      style: const TextStyle(
                                        fontSize: 26,
                                        fontWeight: FontWeight.bold,
                                        color: Colors.white,
                                      ),
                                    ),
                                    const SizedBox(height: 16),
                                    Text(
                                      page["desc"]!,
                                      textAlign: TextAlign.center,
                                      style: const TextStyle(
                                        fontSize: 16,
                                        color: Color(0xFFBDC6C7),
                                      ),
                                    ),
                                  ],
                                ),
                              ),
                            ),
                          ),
                          const SizedBox(height: 40),
                          ElevatedButton(
                            style: ElevatedButton.styleFrom(
                              backgroundColor: const Color(0xFFC68B39),
                              minimumSize: const Size(double.infinity, 50),
                              shape: RoundedRectangleBorder(
                                borderRadius: BorderRadius.circular(15),
                              ),
                              elevation: 10,
                              shadowColor: Colors.black45,
                            ),
                            onPressed: _nextPage,
                            child: Text(
                              _currentIndex == pages.length - 1
                                  ? "Get Started"
                                  : "Next",
                              style: const TextStyle(
                                fontSize: 18,
                                fontWeight: FontWeight.bold,
                                color: Colors.white,
                              ),
                            ),
                          ),
                        ],
                      ),
                    );
                  },
                ),
              ),
              Row(
                mainAxisAlignment: MainAxisAlignment.center,
                children: List.generate(
                  pages.length,
                  (index) => AnimatedContainer(
                    duration: const Duration(milliseconds: 300),
                    margin: const EdgeInsets.all(4),
                    width: _currentIndex == index ? 16 : 10,
                    height: 10,
                    decoration: BoxDecoration(
                      color:
                          _currentIndex == index
                              ? const Color(0xFFC68B39)
                              : Colors.grey[600],
                      borderRadius: BorderRadius.circular(5),
                    ),
                  ),
                ),
              ),
              const SizedBox(height: 24),
            ],
          ),
        ),
      ),
    );
  }
}

// ----------------- Onboarding Page -----------------
class OnboardingPage extends StatelessWidget {
  const OnboardingPage({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.symmetric(horizontal: 24.0),
          child: Column(
            mainAxisAlignment: MainAxisAlignment.center,
            children: [
              const Spacer(),
              CircleAvatar(
                radius: 40,
                backgroundColor: const Color(0xFFC68B39),
                child: const Icon(
                  Icons.airplanemode_active,
                  color: Colors.white,
                  size: 40,
                ),
              ),
              const SizedBox(height: 24),
              const Text(
                'SkyMiles',
                style: TextStyle(
                  fontSize: 28,
                  fontWeight: FontWeight.bold,
                  color: Colors.white,
                ),
              ),
              const SizedBox(height: 8),
              const Text(
                'Travel further, earn more',
                style: TextStyle(fontSize: 16, color: Color(0xFFCCCCCC)),
              ),
              const SizedBox(height: 32),
              const FeatureRow(
                icon: Icons.flight_takeoff,
                text: "Book flights worldwide",
              ),
              const FeatureRow(
                icon: Icons.trending_up,
                text: "Earn miles on every trip",
              ),
              const FeatureRow(
                icon: Icons.redeem,
                text: "Redeem exclusive rewards",
              ),
              const Spacer(),
              ElevatedButton(
                style: ElevatedButton.styleFrom(
                  backgroundColor: const Color(0xFFC68B39),
                  minimumSize: const Size(double.infinity, 48),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                onPressed: () => Navigator.pushNamed(context, '/login'),
                child: const Text("Login"),
              ),
              const SizedBox(height: 16),
              OutlinedButton(
                style: OutlinedButton.styleFrom(
                  side: const BorderSide(color: Color(0xFFC68B39)),
                  minimumSize: const Size(double.infinity, 48),
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10),
                  ),
                ),
                onPressed: () => Navigator.pushNamed(context, '/signup'),
                child: const Text(
                  "Create Account",
                  style: TextStyle(color: Color(0xFFC68B39)),
                ),
              ),
              const SizedBox(height: 32),
            ],
          ),
        ),
      ),
    );
  }
}

class FeatureRow extends StatelessWidget {
  final IconData icon;
  final String text;

  const FeatureRow({Key? key, required this.icon, required this.text})
    : super(key: key);

  @override
  Widget build(BuildContext context) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: Row(
        children: [
          Icon(icon, color: const Color(0xFFC68B39)),
          const SizedBox(width: 12),
          Text(text, style: const TextStyle(color: Colors.white, fontSize: 16)),
        ],
      ),
    );
  }
}
